function I(e,t){if(!Boolean(e))throw new Error(t)}function H(e){return typeof e=="object"&&e!==null}function Ne(e,t){if(!Boolean(e))throw new Error(t??"Unexpected invariant triggered.")}const Ke=/\r\n|[\n\r]/g;function fe(e,t){let n=0,s=1;for(const i of e.body.matchAll(Ke)){if(typeof i.index=="number"||Ne(!1),i.index>=t)break;n=i.index+i[0].length,s+=1}return{line:s,column:t+1-n}}function et(e){return Ve(e.source,fe(e.source,e.start))}function Ve(e,t){const n=e.locationOffset.column-1,s="".padStart(n)+e.body,i=t.line-1,r=e.locationOffset.line-1,a=t.line+r,l=t.line===1?n:0,d=t.column+l,h=`${e.name}:${a}:${d}
`,p=s.split(/\r\n|[\n\r]/g),v=p[i];if(v.length>120){const N=Math.floor(d/80),g=d%80,m=[];for(let b=0;b<v.length;b+=80)m.push(v.slice(b,b+80));return h+Le([[`${a} |`,m[0]],...m.slice(1,N+1).map(b=>["|",b]),["|","^".padStart(g)],["|",m[N+1]]])}return h+Le([[`${a-1} |`,p[i-1]],[`${a} |`,v],["|","^".padStart(d)],[`${a+1} |`,p[i+1]]])}function Le(e){const t=e.filter(([s,i])=>i!==void 0),n=Math.max(...t.map(([s])=>s.length));return t.map(([s,i])=>s.padStart(n)+(i?" "+i:"")).join(`
`)}function tt(e){const t=e[0];return t==null||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}class y extends Error{constructor(t,...n){var s,i,r;const{nodes:a,source:l,positions:d,path:h,originalError:p,extensions:v}=tt(n);super(t),this.name="GraphQLError",this.path=h??void 0,this.originalError=p??void 0,this.nodes=De(Array.isArray(a)?a:a?[a]:void 0);const N=De((s=this.nodes)===null||s===void 0?void 0:s.map(m=>m.loc).filter(m=>m!=null));this.source=l??(N==null||(i=N[0])===null||i===void 0?void 0:i.source),this.positions=d??(N==null?void 0:N.map(m=>m.start)),this.locations=d&&l?d.map(m=>fe(l,m)):N==null?void 0:N.map(m=>fe(m.source,m.start));const g=H(p==null?void 0:p.extensions)?p==null?void 0:p.extensions:void 0;this.extensions=(r=v??g)!==null&&r!==void 0?r:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),p!=null&&p.stack?Object.defineProperty(this,"stack",{value:p.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,y):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let t=this.message;if(this.nodes)for(const n of this.nodes)n.loc&&(t+=`

`+et(n.loc));else if(this.source&&this.locations)for(const n of this.locations)t+=`

`+Ve(this.source,n);return t}toJSON(){const t={message:this.message};return this.locations!=null&&(t.locations=this.locations),this.path!=null&&(t.path=this.path),this.extensions!=null&&Object.keys(this.extensions).length>0&&(t.extensions=this.extensions),t}}function De(e){return e===void 0||e.length===0?void 0:e}function O(e,t,n){return new y(`Syntax Error: ${n}`,{source:e,positions:[t]})}class nt{constructor(t,n,s){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=s}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}}class Be{constructor(t,n,s,i,r,a){this.kind=t,this.start=n,this.end=s,this.line=i,this.column=r,this.value=a,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}}const Me={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},it=new Set(Object.keys(Me));function we(e){const t=e==null?void 0:e.kind;return typeof t=="string"&&it.has(t)}var G;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})(G||(G={}));var _;(function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"})(_||(_={}));var c;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(c||(c={}));function me(e){return e===9||e===32}function W(e){return e>=48&&e<=57}function je(e){return e>=97&&e<=122||e>=65&&e<=90}function Ee(e){return je(e)||e===95}function $e(e){return je(e)||W(e)||e===95}function st(e){var t;let n=Number.MAX_SAFE_INTEGER,s=null,i=-1;for(let a=0;a<e.length;++a){var r;const l=e[a],d=rt(l);d!==l.length&&(s=(r=s)!==null&&r!==void 0?r:a,i=a,a!==0&&d<n&&(n=d))}return e.map((a,l)=>l===0?a:a.slice(n)).slice((t=s)!==null&&t!==void 0?t:0,i+1)}function rt(e){let t=0;for(;t<e.length&&me(e.charCodeAt(t));)++t;return t}function ot(e,t){const n=e.replace(/"""/g,'\\"""'),s=n.split(/\r\n|[\n\r]/g),i=s.length===1,r=s.length>1&&s.slice(1).every(g=>g.length===0||me(g.charCodeAt(0))),a=n.endsWith('\\"""'),l=e.endsWith('"')&&!a,d=e.endsWith("\\"),h=l||d,p=!(t!=null&&t.minimize)&&(!i||e.length>70||h||r||a);let v="";const N=i&&me(e.charCodeAt(0));return(p&&!N||r)&&(v+=`
`),v+=n,(p||h)&&(v+=`
`),'"""'+v+'"""'}var o;(function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"})(o||(o={}));class at{constructor(t){const n=new Be(o.SOF,0,0,0,0);this.source=t,this.lastToken=n,this.token=n,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let t=this.token;if(t.kind!==o.EOF)do if(t.next)t=t.next;else{const n=ut(this,t.end);t.next=n,n.prev=t,t=n}while(t.kind===o.COMMENT);return t}}function ct(e){return e===o.BANG||e===o.DOLLAR||e===o.AMP||e===o.PAREN_L||e===o.PAREN_R||e===o.SPREAD||e===o.COLON||e===o.EQUALS||e===o.AT||e===o.BRACKET_L||e===o.BRACKET_R||e===o.BRACE_L||e===o.PIPE||e===o.BRACE_R}function J(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function oe(e,t){return Pe(e.charCodeAt(t))&&Ge(e.charCodeAt(t+1))}function Pe(e){return e>=55296&&e<=56319}function Ge(e){return e>=56320&&e<=57343}function $(e,t){const n=e.source.body.codePointAt(t);if(n===void 0)return o.EOF;if(n>=32&&n<=126){const s=String.fromCodePoint(n);return s==='"'?`'"'`:`"${s}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function x(e,t,n,s,i){const r=e.line,a=1+n-e.lineStart;return new Be(t,n,s,r,a,i)}function ut(e,t){const n=e.source.body,s=n.length;let i=t;for(;i<s;){const r=n.charCodeAt(i);switch(r){case 65279:case 9:case 32:case 44:++i;continue;case 10:++i,++e.line,e.lineStart=i;continue;case 13:n.charCodeAt(i+1)===10?i+=2:++i,++e.line,e.lineStart=i;continue;case 35:return lt(e,i);case 33:return x(e,o.BANG,i,i+1);case 36:return x(e,o.DOLLAR,i,i+1);case 38:return x(e,o.AMP,i,i+1);case 40:return x(e,o.PAREN_L,i,i+1);case 41:return x(e,o.PAREN_R,i,i+1);case 46:if(n.charCodeAt(i+1)===46&&n.charCodeAt(i+2)===46)return x(e,o.SPREAD,i,i+3);break;case 58:return x(e,o.COLON,i,i+1);case 61:return x(e,o.EQUALS,i,i+1);case 64:return x(e,o.AT,i,i+1);case 91:return x(e,o.BRACKET_L,i,i+1);case 93:return x(e,o.BRACKET_R,i,i+1);case 123:return x(e,o.BRACE_L,i,i+1);case 124:return x(e,o.PIPE,i,i+1);case 125:return x(e,o.BRACE_R,i,i+1);case 34:return n.charCodeAt(i+1)===34&&n.charCodeAt(i+2)===34?Tt(e,i):dt(e,i)}if(W(r)||r===45)return pt(e,i,r);if(Ee(r))return yt(e,i);throw O(e.source,i,r===39?`Unexpected single quote character ('), did you mean to use a double quote (")?`:J(r)||oe(n,i)?`Unexpected character: ${$(e,i)}.`:`Invalid character: ${$(e,i)}.`)}return x(e,o.EOF,s,s)}function lt(e,t){const n=e.source.body,s=n.length;let i=t+1;for(;i<s;){const r=n.charCodeAt(i);if(r===10||r===13)break;if(J(r))++i;else if(oe(n,i))i+=2;else break}return x(e,o.COMMENT,t,i,n.slice(t+1,i))}function pt(e,t,n){const s=e.source.body;let i=t,r=n,a=!1;if(r===45&&(r=s.charCodeAt(++i)),r===48){if(r=s.charCodeAt(++i),W(r))throw O(e.source,i,`Invalid number, unexpected digit after 0: ${$(e,i)}.`)}else i=pe(e,i,r),r=s.charCodeAt(i);if(r===46&&(a=!0,r=s.charCodeAt(++i),i=pe(e,i,r),r=s.charCodeAt(i)),(r===69||r===101)&&(a=!0,r=s.charCodeAt(++i),(r===43||r===45)&&(r=s.charCodeAt(++i)),i=pe(e,i,r),r=s.charCodeAt(i)),r===46||Ee(r))throw O(e.source,i,`Invalid number, expected digit but got: ${$(e,i)}.`);return x(e,a?o.FLOAT:o.INT,t,i,s.slice(t,i))}function pe(e,t,n){if(!W(n))throw O(e.source,t,`Invalid number, expected digit but got: ${$(e,t)}.`);const s=e.source.body;let i=t+1;for(;W(s.charCodeAt(i));)++i;return i}function dt(e,t){const n=e.source.body,s=n.length;let i=t+1,r=i,a="";for(;i<s;){const l=n.charCodeAt(i);if(l===34)return a+=n.slice(r,i),x(e,o.STRING,t,i+1,a);if(l===92){a+=n.slice(r,i);const d=n.charCodeAt(i+1)===117?n.charCodeAt(i+2)===123?ht(e,i):ft(e,i):mt(e,i);a+=d.value,i+=d.size,r=i;continue}if(l===10||l===13)break;if(J(l))++i;else if(oe(n,i))i+=2;else throw O(e.source,i,`Invalid character within String: ${$(e,i)}.`)}throw O(e.source,i,"Unterminated string.")}function ht(e,t){const n=e.source.body;let s=0,i=3;for(;i<12;){const r=n.charCodeAt(t+i++);if(r===125){if(i<5||!J(s))break;return{value:String.fromCodePoint(s),size:i}}if(s=s<<4|z(r),s<0)break}throw O(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+i)}".`)}function ft(e,t){const n=e.source.body,s=Re(n,t+2);if(J(s))return{value:String.fromCodePoint(s),size:6};if(Pe(s)&&n.charCodeAt(t+6)===92&&n.charCodeAt(t+7)===117){const i=Re(n,t+8);if(Ge(i))return{value:String.fromCodePoint(s,i),size:12}}throw O(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function Re(e,t){return z(e.charCodeAt(t))<<12|z(e.charCodeAt(t+1))<<8|z(e.charCodeAt(t+2))<<4|z(e.charCodeAt(t+3))}function z(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function mt(e,t){const n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:`
`,size:2};case 114:return{value:"\r",size:2};case 116:return{value:"	",size:2}}throw O(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function Tt(e,t){const n=e.source.body,s=n.length;let i=e.lineStart,r=t+3,a=r,l="";const d=[];for(;r<s;){const h=n.charCodeAt(r);if(h===34&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34){l+=n.slice(a,r),d.push(l);const p=x(e,o.BLOCK_STRING,t,r+3,st(d).join(`
`));return e.line+=d.length-1,e.lineStart=i,p}if(h===92&&n.charCodeAt(r+1)===34&&n.charCodeAt(r+2)===34&&n.charCodeAt(r+3)===34){l+=n.slice(a,r),a=r+1,r+=4;continue}if(h===10||h===13){l+=n.slice(a,r),d.push(l),h===13&&n.charCodeAt(r+1)===10?r+=2:++r,l="",a=r,i=r;continue}if(J(h))++r;else if(oe(n,r))r+=2;else throw O(e.source,r,`Invalid character within String: ${$(e,r)}.`)}throw O(e.source,r,"Unterminated string.")}function yt(e,t){const n=e.source.body,s=n.length;let i=t+1;for(;i<s;){const r=n.charCodeAt(i);if($e(r))++i;else break}return x(e,o.NAME,t,i,n.slice(t,i))}const Nt=10,Qe=2;function E(e){return ae(e,[])}function ae(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return Et(e,t);default:return String(e)}}function Et(e,t){if(e===null)return"null";if(t.includes(e))return"[Circular]";const n=[...t,e];if(vt(e)){const s=e.toJSON();if(s!==e)return typeof s=="string"?s:ae(s,n)}else if(Array.isArray(e))return _t(e,n);return It(e,n)}function vt(e){return typeof e.toJSON=="function"}function It(e,t){const n=Object.entries(e);return n.length===0?"{}":t.length>Qe?"["+xt(e)+"]":"{ "+n.map(([i,r])=>i+": "+ae(r,t)).join(", ")+" }"}function _t(e,t){if(e.length===0)return"[]";if(t.length>Qe)return"[Array]";const n=Math.min(Nt,e.length),s=e.length-n,i=[];for(let r=0;r<n;++r)i.push(ae(e[r],t));return s===1?i.push("... 1 more item"):s>1&&i.push(`... ${s} more items`),"["+i.join(", ")+"]"}function xt(e){const t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor=="function"){const n=e.constructor.name;if(typeof n=="string"&&n!=="")return n}return t}const V=function(t,n){return t instanceof n};class Je{constructor(t,n="GraphQL request",s={line:1,column:1}){typeof t=="string"||I(!1,`Body must be a string. Received: ${E(t)}.`),this.body=t,this.name=n,this.locationOffset=s,this.locationOffset.line>0||I(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||I(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}}function At(e){return V(e,Je)}function un(e,t){return new Ot(e,t).parseDocument()}class Ot{constructor(t,n={}){const s=At(t)?t:new Je(t);this._lexer=new at(s),this._options=n,this._tokenCounter=0}parseName(){const t=this.expectToken(o.NAME);return this.node(t,{kind:c.NAME,value:t.value})}parseDocument(){return this.node(this._lexer.token,{kind:c.DOCUMENT,definitions:this.many(o.SOF,this.parseDefinition,o.EOF)})}parseDefinition(){if(this.peek(o.BRACE_L))return this.parseOperationDefinition();const t=this.peekDescription(),n=t?this._lexer.lookahead():this._lexer.token;if(n.kind===o.NAME){switch(n.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(t)throw O(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(n.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(n)}parseOperationDefinition(){const t=this._lexer.token;if(this.peek(o.BRACE_L))return this.node(t,{kind:c.OPERATION_DEFINITION,operation:G.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});const n=this.parseOperationType();let s;return this.peek(o.NAME)&&(s=this.parseName()),this.node(t,{kind:c.OPERATION_DEFINITION,operation:n,name:s,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){const t=this.expectToken(o.NAME);switch(t.value){case"query":return G.QUERY;case"mutation":return G.MUTATION;case"subscription":return G.SUBSCRIPTION}throw this.unexpected(t)}parseVariableDefinitions(){return this.optionalMany(o.PAREN_L,this.parseVariableDefinition,o.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:c.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(o.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(o.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){const t=this._lexer.token;return this.expectToken(o.DOLLAR),this.node(t,{kind:c.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:c.SELECTION_SET,selections:this.many(o.BRACE_L,this.parseSelection,o.BRACE_R)})}parseSelection(){return this.peek(o.SPREAD)?this.parseFragment():this.parseField()}parseField(){const t=this._lexer.token,n=this.parseName();let s,i;return this.expectOptionalToken(o.COLON)?(s=n,i=this.parseName()):i=n,this.node(t,{kind:c.FIELD,alias:s,name:i,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(o.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(t){const n=t?this.parseConstArgument:this.parseArgument;return this.optionalMany(o.PAREN_L,n,o.PAREN_R)}parseArgument(t=!1){const n=this._lexer.token,s=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:c.ARGUMENT,name:s,value:this.parseValueLiteral(t)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){const t=this._lexer.token;this.expectToken(o.SPREAD);const n=this.expectOptionalKeyword("on");return!n&&this.peek(o.NAME)?this.node(t,{kind:c.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(t,{kind:c.INLINE_FRAGMENT,typeCondition:n?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){const t=this._lexer.token;return this.expectKeyword("fragment"),this._options.allowLegacyFragmentVariables===!0?this.node(t,{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(t,{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on")throw this.unexpected();return this.parseName()}parseValueLiteral(t){const n=this._lexer.token;switch(n.kind){case o.BRACKET_L:return this.parseList(t);case o.BRACE_L:return this.parseObject(t);case o.INT:return this.advanceLexer(),this.node(n,{kind:c.INT,value:n.value});case o.FLOAT:return this.advanceLexer(),this.node(n,{kind:c.FLOAT,value:n.value});case o.STRING:case o.BLOCK_STRING:return this.parseStringLiteral();case o.NAME:switch(this.advanceLexer(),n.value){case"true":return this.node(n,{kind:c.BOOLEAN,value:!0});case"false":return this.node(n,{kind:c.BOOLEAN,value:!1});case"null":return this.node(n,{kind:c.NULL});default:return this.node(n,{kind:c.ENUM,value:n.value})}case o.DOLLAR:if(t)if(this.expectToken(o.DOLLAR),this._lexer.token.kind===o.NAME){const s=this._lexer.token.value;throw O(this._lexer.source,n.start,`Unexpected variable "$${s}" in constant value.`)}else throw this.unexpected(n);return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){const t=this._lexer.token;return this.advanceLexer(),this.node(t,{kind:c.STRING,value:t.value,block:t.kind===o.BLOCK_STRING})}parseList(t){const n=()=>this.parseValueLiteral(t);return this.node(this._lexer.token,{kind:c.LIST,values:this.any(o.BRACKET_L,n,o.BRACKET_R)})}parseObject(t){const n=()=>this.parseObjectField(t);return this.node(this._lexer.token,{kind:c.OBJECT,fields:this.any(o.BRACE_L,n,o.BRACE_R)})}parseObjectField(t){const n=this._lexer.token,s=this.parseName();return this.expectToken(o.COLON),this.node(n,{kind:c.OBJECT_FIELD,name:s,value:this.parseValueLiteral(t)})}parseDirectives(t){const n=[];for(;this.peek(o.AT);)n.push(this.parseDirective(t));return n}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(t){const n=this._lexer.token;return this.expectToken(o.AT),this.node(n,{kind:c.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(t)})}parseTypeReference(){const t=this._lexer.token;let n;if(this.expectOptionalToken(o.BRACKET_L)){const s=this.parseTypeReference();this.expectToken(o.BRACKET_R),n=this.node(t,{kind:c.LIST_TYPE,type:s})}else n=this.parseNamedType();return this.expectOptionalToken(o.BANG)?this.node(t,{kind:c.NON_NULL_TYPE,type:n}):n}parseNamedType(){return this.node(this._lexer.token,{kind:c.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(o.STRING)||this.peek(o.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("schema");const s=this.parseConstDirectives(),i=this.many(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);return this.node(t,{kind:c.SCHEMA_DEFINITION,description:n,directives:s,operationTypes:i})}parseOperationTypeDefinition(){const t=this._lexer.token,n=this.parseOperationType();this.expectToken(o.COLON);const s=this.parseNamedType();return this.node(t,{kind:c.OPERATION_TYPE_DEFINITION,operation:n,type:s})}parseScalarTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("scalar");const s=this.parseName(),i=this.parseConstDirectives();return this.node(t,{kind:c.SCALAR_TYPE_DEFINITION,description:n,name:s,directives:i})}parseObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("type");const s=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:c.OBJECT_TYPE_DEFINITION,description:n,name:s,interfaces:i,directives:r,fields:a})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(o.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseFieldDefinition,o.BRACE_R)}parseFieldDefinition(){const t=this._lexer.token,n=this.parseDescription(),s=this.parseName(),i=this.parseArgumentDefs();this.expectToken(o.COLON);const r=this.parseTypeReference(),a=this.parseConstDirectives();return this.node(t,{kind:c.FIELD_DEFINITION,description:n,name:s,arguments:i,type:r,directives:a})}parseArgumentDefs(){return this.optionalMany(o.PAREN_L,this.parseInputValueDef,o.PAREN_R)}parseInputValueDef(){const t=this._lexer.token,n=this.parseDescription(),s=this.parseName();this.expectToken(o.COLON);const i=this.parseTypeReference();let r;this.expectOptionalToken(o.EQUALS)&&(r=this.parseConstValueLiteral());const a=this.parseConstDirectives();return this.node(t,{kind:c.INPUT_VALUE_DEFINITION,description:n,name:s,type:i,defaultValue:r,directives:a})}parseInterfaceTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("interface");const s=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),a=this.parseFieldsDefinition();return this.node(t,{kind:c.INTERFACE_TYPE_DEFINITION,description:n,name:s,interfaces:i,directives:r,fields:a})}parseUnionTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("union");const s=this.parseName(),i=this.parseConstDirectives(),r=this.parseUnionMemberTypes();return this.node(t,{kind:c.UNION_TYPE_DEFINITION,description:n,name:s,directives:i,types:r})}parseUnionMemberTypes(){return this.expectOptionalToken(o.EQUALS)?this.delimitedMany(o.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("enum");const s=this.parseName(),i=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();return this.node(t,{kind:c.ENUM_TYPE_DEFINITION,description:n,name:s,directives:i,values:r})}parseEnumValuesDefinition(){return this.optionalMany(o.BRACE_L,this.parseEnumValueDefinition,o.BRACE_R)}parseEnumValueDefinition(){const t=this._lexer.token,n=this.parseDescription(),s=this.parseEnumValueName(),i=this.parseConstDirectives();return this.node(t,{kind:c.ENUM_VALUE_DEFINITION,description:n,name:s,directives:i})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null")throw O(this._lexer.source,this._lexer.token.start,`${ee(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("input");const s=this.parseName(),i=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();return this.node(t,{kind:c.INPUT_OBJECT_TYPE_DEFINITION,description:n,name:s,directives:i,fields:r})}parseInputFieldsDefinition(){return this.optionalMany(o.BRACE_L,this.parseInputValueDef,o.BRACE_R)}parseTypeSystemExtension(){const t=this._lexer.lookahead();if(t.kind===o.NAME)switch(t.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(t)}parseSchemaExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");const n=this.parseConstDirectives(),s=this.optionalMany(o.BRACE_L,this.parseOperationTypeDefinition,o.BRACE_R);if(n.length===0&&s.length===0)throw this.unexpected();return this.node(t,{kind:c.SCHEMA_EXTENSION,directives:n,operationTypes:s})}parseScalarTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");const n=this.parseName(),s=this.parseConstDirectives();if(s.length===0)throw this.unexpected();return this.node(t,{kind:c.SCALAR_TYPE_EXTENSION,name:n,directives:s})}parseObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");const n=this.parseName(),s=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(s.length===0&&i.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:c.OBJECT_TYPE_EXTENSION,name:n,interfaces:s,directives:i,fields:r})}parseInterfaceTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");const n=this.parseName(),s=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(s.length===0&&i.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:c.INTERFACE_TYPE_EXTENSION,name:n,interfaces:s,directives:i,fields:r})}parseUnionTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");const n=this.parseName(),s=this.parseConstDirectives(),i=this.parseUnionMemberTypes();if(s.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:c.UNION_TYPE_EXTENSION,name:n,directives:s,types:i})}parseEnumTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");const n=this.parseName(),s=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();if(s.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:c.ENUM_TYPE_EXTENSION,name:n,directives:s,values:i})}parseInputObjectTypeExtension(){const t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");const n=this.parseName(),s=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();if(s.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:c.INPUT_OBJECT_TYPE_EXTENSION,name:n,directives:s,fields:i})}parseDirectiveDefinition(){const t=this._lexer.token,n=this.parseDescription();this.expectKeyword("directive"),this.expectToken(o.AT);const s=this.parseName(),i=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");const a=this.parseDirectiveLocations();return this.node(t,{kind:c.DIRECTIVE_DEFINITION,description:n,name:s,arguments:i,repeatable:r,locations:a})}parseDirectiveLocations(){return this.delimitedMany(o.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){const t=this._lexer.token,n=this.parseName();if(Object.prototype.hasOwnProperty.call(_,n.value))return n;throw this.unexpected(t)}node(t,n){return this._options.noLocation!==!0&&(n.loc=new nt(t,this._lexer.lastToken,this._lexer.source)),n}peek(t){return this._lexer.token.kind===t}expectToken(t){const n=this._lexer.token;if(n.kind===t)return this.advanceLexer(),n;throw O(this._lexer.source,n.start,`Expected ${Ye(t)}, found ${ee(n)}.`)}expectOptionalToken(t){return this._lexer.token.kind===t?(this.advanceLexer(),!0):!1}expectKeyword(t){const n=this._lexer.token;if(n.kind===o.NAME&&n.value===t)this.advanceLexer();else throw O(this._lexer.source,n.start,`Expected "${t}", found ${ee(n)}.`)}expectOptionalKeyword(t){const n=this._lexer.token;return n.kind===o.NAME&&n.value===t?(this.advanceLexer(),!0):!1}unexpected(t){const n=t??this._lexer.token;return O(this._lexer.source,n.start,`Unexpected ${ee(n)}.`)}any(t,n,s){this.expectToken(t);const i=[];for(;!this.expectOptionalToken(s);)i.push(n.call(this));return i}optionalMany(t,n,s){if(this.expectOptionalToken(t)){const i=[];do i.push(n.call(this));while(!this.expectOptionalToken(s));return i}return[]}many(t,n,s){this.expectToken(t);const i=[];do i.push(n.call(this));while(!this.expectOptionalToken(s));return i}delimitedMany(t,n){this.expectOptionalToken(t);const s=[];do s.push(n.call(this));while(this.expectOptionalToken(t));return s}advanceLexer(){const{maxTokens:t}=this._options,n=this._lexer.advance();if(t!==void 0&&n.kind!==o.EOF&&(++this._tokenCounter,this._tokenCounter>t))throw O(this._lexer.source,n.start,`Document contains more that ${t} tokens. Parsing aborted.`)}}function ee(e){const t=e.value;return Ye(e.kind)+(t!=null?` "${t}"`:"")}function Ye(e){return ct(e)?`"${e}"`:e}const St=5;function gt(e,t){const[n,s]=t?[e,t]:[void 0,e];let i=" Did you mean ";n&&(i+=n+" ");const r=s.map(d=>`"${d}"`);switch(r.length){case 0:return"";case 1:return i+r[0]+"?";case 2:return i+r[0]+" or "+r[1]+"?"}const a=r.slice(0,St),l=a.pop();return i+a.join(", ")+", or "+l+"?"}function ke(e){return e}function bt(e,t){const n=Object.create(null);for(const s of e)n[t(s)]=s;return n}function ve(e,t,n){const s=Object.create(null);for(const i of e)s[t(i)]=n(i);return s}function ce(e,t){const n=Object.create(null);for(const s of Object.keys(e))n[s]=t(e[s],s);return n}function Lt(e,t){let n=0,s=0;for(;n<e.length&&s<t.length;){let i=e.charCodeAt(n),r=t.charCodeAt(s);if(te(i)&&te(r)){let a=0;do++n,a=a*10+i-Te,i=e.charCodeAt(n);while(te(i)&&a>0);let l=0;do++s,l=l*10+r-Te,r=t.charCodeAt(s);while(te(r)&&l>0);if(a<l)return-1;if(a>l)return 1}else{if(i<r)return-1;if(i>r)return 1;++n,++s}}return e.length-t.length}const Te=48,Dt=57;function te(e){return!isNaN(e)&&Te<=e&&e<=Dt}function wt(e,t){const n=Object.create(null),s=new Rt(e),i=Math.floor(e.length*.4)+1;for(const r of t){const a=s.measure(r,i);a!==void 0&&(n[r]=a)}return Object.keys(n).sort((r,a)=>{const l=n[r]-n[a];return l!==0?l:Lt(r,a)})}class Rt{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=Ce(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;const s=t.toLowerCase();if(this._inputLowerCase===s)return 1;let i=Ce(s),r=this._inputArray;if(i.length<r.length){const p=i;i=r,r=p}const a=i.length,l=r.length;if(a-l>n)return;const d=this._rows;for(let p=0;p<=l;p++)d[0][p]=p;for(let p=1;p<=a;p++){const v=d[(p-1)%3],N=d[p%3];let g=N[0]=p;for(let m=1;m<=l;m++){const b=i[p-1]===r[m-1]?0:1;let F=Math.min(v[m]+1,N[m-1]+1,v[m-1]+b);if(p>1&&m>1&&i[p-1]===r[m-2]&&i[p-2]===r[m-1]){const L=d[(p-2)%3][m-2];F=Math.min(F,L+1)}F<g&&(g=F),N[m]=F}if(g>n)return}const h=d[a%3][l];return h<=n?h:void 0}}function Ce(e){const t=e.length,n=new Array(t);for(let s=0;s<t;++s)n[s]=e.charCodeAt(s);return n}function k(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;const t=Object.create(null);for(const[n,s]of Object.entries(e))t[n]=s;return t}function kt(e){return`"${e.replace(Ct,Ft)}"`}const Ct=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function Ft(e){return Ut[e.charCodeAt(0)]}const Ut=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"],Vt=Object.freeze({});function Bt(e,t,n=Me){const s=new Map;for(const L of Object.values(c))s.set(L,Mt(t,L));let i,r=Array.isArray(e),a=[e],l=-1,d=[],h=e,p,v;const N=[],g=[];do{l++;const L=l===a.length,Se=L&&d.length!==0;if(L){if(p=g.length===0?void 0:N[N.length-1],h=v,v=g.pop(),Se)if(r){h=h.slice();let M=0;for(const[le,ge]of d){const be=le-M;ge===null?(h.splice(be,1),M++):h[be]=ge}}else{h=Object.defineProperties({},Object.getOwnPropertyDescriptors(h));for(const[M,le]of d)h[M]=le}l=i.index,a=i.keys,d=i.edits,r=i.inArray,i=i.prev}else if(v){if(p=r?l:a[l],h=v[p],h==null)continue;N.push(p)}let B;if(!Array.isArray(h)){var m,b;we(h)||I(!1,`Invalid AST Node: ${E(h)}.`);const M=L?(m=s.get(h.kind))===null||m===void 0?void 0:m.leave:(b=s.get(h.kind))===null||b===void 0?void 0:b.enter;if(B=M==null?void 0:M.call(t,h,p,v,N,g),B===Vt)break;if(B===!1){if(!L){N.pop();continue}}else if(B!==void 0&&(d.push([p,B]),!L))if(we(B))h=B;else{N.pop();continue}}if(B===void 0&&Se&&d.push([p,h]),L)N.pop();else{var F;i={inArray:r,index:l,keys:a,edits:d,prev:i},r=Array.isArray(h),a=r?h:(F=n[h.kind])!==null&&F!==void 0?F:[],l=-1,d=[],v&&g.push(v),v=h}}while(i!==void 0);return d.length!==0?d[d.length-1][1]:e}function Mt(e,t){const n=e[t];return typeof n=="object"?n:typeof n=="function"?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function j(e){return Bt(e,$t)}const jt=80,$t={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>u(e.definitions,`

`)},OperationDefinition:{leave(e){const t=f("(",u(e.variableDefinitions,", "),")"),n=u([e.operation,u([e.name,t]),u(e.directives," ")]," ");return(n==="query"?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:s})=>e+": "+t+f(" = ",n)+f(" ",u(s," "))},SelectionSet:{leave:({selections:e})=>D(e)},Field:{leave({alias:e,name:t,arguments:n,directives:s,selectionSet:i}){const r=f("",e,": ")+t;let a=r+f("(",u(n,", "),")");return a.length>jt&&(a=r+f(`(
`,ie(u(n,`
`)),`
)`)),u([a,u(s," "),i]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+f(" ",u(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>u(["...",f("on ",e),u(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:s,selectionSet:i})=>`fragment ${e}${f("(",u(n,", "),")")} on ${t} ${f("",u(s," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?ot(e):kt(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+u(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{"+u(e,", ")+"}"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+f("(",u(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>f("",e,`
`)+u(["schema",u(t," "),D(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>f("",e,`
`)+u(["scalar",t,u(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:s,fields:i})=>f("",e,`
`)+u(["type",t,f("implements ",u(n," & ")),u(s," "),D(i)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:s,directives:i})=>f("",e,`
`)+t+(Fe(n)?f(`(
`,ie(u(n,`
`)),`
)`):f("(",u(n,", "),")"))+": "+s+f(" ",u(i," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:s,directives:i})=>f("",e,`
`)+u([t+": "+n,f("= ",s),u(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:s,fields:i})=>f("",e,`
`)+u(["interface",t,f("implements ",u(n," & ")),u(s," "),D(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:s})=>f("",e,`
`)+u(["union",t,u(n," "),f("= ",u(s," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:s})=>f("",e,`
`)+u(["enum",t,u(n," "),D(s)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>f("",e,`
`)+u([t,u(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:s})=>f("",e,`
`)+u(["input",t,u(n," "),D(s)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:s,locations:i})=>f("",e,`
`)+"directive @"+t+(Fe(n)?f(`(
`,ie(u(n,`
`)),`
)`):f("(",u(n,", "),")"))+(s?" repeatable":"")+" on "+u(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>u(["extend schema",u(e," "),D(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>u(["extend scalar",e,u(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:s})=>u(["extend type",e,f("implements ",u(t," & ")),u(n," "),D(s)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:s})=>u(["extend interface",e,f("implements ",u(t," & ")),u(n," "),D(s)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>u(["extend union",e,u(t," "),f("= ",u(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>u(["extend enum",e,u(t," "),D(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>u(["extend input",e,u(t," "),D(n)]," ")}};function u(e,t=""){var n;return(n=e==null?void 0:e.filter(s=>s).join(t))!==null&&n!==void 0?n:""}function D(e){return f(`{
`,ie(u(e,`
`)),`
}`)}function f(e,t,n=""){return t!=null&&t!==""?e+t+n:""}function ie(e){return f("  ",e.replace(/\n/g,`
  `))}function Fe(e){var t;return(t=e==null?void 0:e.some(n=>n.includes(`
`)))!==null&&t!==void 0?t:!1}function ye(e,t){switch(e.kind){case c.NULL:return null;case c.INT:return parseInt(e.value,10);case c.FLOAT:return parseFloat(e.value);case c.STRING:case c.ENUM:case c.BOOLEAN:return e.value;case c.LIST:return e.values.map(n=>ye(n,t));case c.OBJECT:return ve(e.fields,n=>n.name.value,n=>ye(n.value,t));case c.VARIABLE:return t==null?void 0:t[e.name.value]}}function C(e){if(e!=null||I(!1,"Must provide name."),typeof e=="string"||I(!1,"Expected name to be a string."),e.length===0)throw new y("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!$e(e.charCodeAt(t)))throw new y(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Ee(e.charCodeAt(0)))throw new y(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Pt(e){if(e==="true"||e==="false"||e==="null")throw new y(`Enum values cannot be named: ${e}`);return C(e)}function ze(e){return Ie(e)||se(e)||X(e)||_e(e)||Z(e)||re(e)||xe(e)||ue(e)}function Ie(e){return V(e,Y)}function se(e){return V(e,P)}function X(e){return V(e,qt)}function _e(e){return V(e,Xt)}function Z(e){return V(e,Ae)}function re(e){return V(e,Zt)}function xe(e){return V(e,w)}function ue(e){return V(e,T)}function Gt(e){return Ie(e)||Z(e)}function Qt(e){return X(e)||_e(e)}class w{constructor(t){ze(t)||I(!1,`Expected ${E(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}}class T{constructor(t){Jt(t)||I(!1,`Expected ${E(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}}function Jt(e){return ze(e)&&!ue(e)}function qe(e){return typeof e=="function"?e():e}function Xe(e){return typeof e=="function"?e():e}class Y{constructor(t){var n,s,i,r;const a=(n=t.parseValue)!==null&&n!==void 0?n:ke;this.name=C(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=(s=t.serialize)!==null&&s!==void 0?s:ke,this.parseValue=a,this.parseLiteral=(i=t.parseLiteral)!==null&&i!==void 0?i:(l,d)=>a(ye(l,d)),this.extensions=k(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(r=t.extensionASTNodes)!==null&&r!==void 0?r:[],t.specifiedByURL==null||typeof t.specifiedByURL=="string"||I(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${E(t.specifiedByURL)}.`),t.serialize==null||typeof t.serialize=="function"||I(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&(typeof t.parseValue=="function"&&typeof t.parseLiteral=="function"||I(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class P{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=k(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=()=>We(t),this._interfaces=()=>He(t),t.isTypeOf==null||typeof t.isTypeOf=="function"||I(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${E(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ze(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function He(e){var t;const n=qe((t=e.interfaces)!==null&&t!==void 0?t:[]);return Array.isArray(n)||I(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),n}function We(e){const t=Xe(e.fields);return Q(t)||I(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),ce(t,(n,s)=>{var i;Q(n)||I(!1,`${e.name}.${s} field config must be an object.`),n.resolve==null||typeof n.resolve=="function"||I(!1,`${e.name}.${s} field resolver must be a function if provided, but got: ${E(n.resolve)}.`);const r=(i=n.args)!==null&&i!==void 0?i:{};return Q(r)||I(!1,`${e.name}.${s} args must be an object with argument names as keys.`),{name:C(s),description:n.description,type:n.type,args:Yt(r),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:k(n.extensions),astNode:n.astNode}})}function Yt(e){return Object.entries(e).map(([t,n])=>({name:C(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:k(n.extensions),astNode:n.astNode}))}function Q(e){return H(e)&&!Array.isArray(e)}function Ze(e){return ce(e,t=>({description:t.description,type:t.type,args:zt(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function zt(e){return ve(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}class qt{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=k(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=We.bind(void 0,t),this._interfaces=He.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||I(!1,`${this.name} must provide "resolveType" as a function, but got: ${E(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:Ze(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}class Xt{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=k(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._types=Ht.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||I(!1,`${this.name} must provide "resolveType" as a function, but got: ${E(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Ht(e){const t=qe(e.types);return Array.isArray(t)||I(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}class Ae{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.extensions=k(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._values=Wt(this.name,t.values),this._valueLookup=new Map(this._values.map(s=>[s.value,s])),this._nameLookup=bt(this._values,s=>s.name)}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(t){return this._nameLookup[t]}serialize(t){const n=this._valueLookup.get(t);if(n===void 0)throw new y(`Enum "${this.name}" cannot represent value: ${E(t)}`);return n.name}parseValue(t){if(typeof t!="string"){const s=E(t);throw new y(`Enum "${this.name}" cannot represent non-string value: ${s}.`+ne(this,s))}const n=this.getValue(t);if(n==null)throw new y(`Value "${t}" does not exist in "${this.name}" enum.`+ne(this,t));return n.value}parseLiteral(t,n){if(t.kind!==c.ENUM){const i=j(t);throw new y(`Enum "${this.name}" cannot represent non-enum value: ${i}.`+ne(this,i),{nodes:t})}const s=this.getValue(t.value);if(s==null){const i=j(t);throw new y(`Value "${i}" does not exist in "${this.name}" enum.`+ne(this,i),{nodes:t})}return s.value}toConfig(){const t=ve(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function ne(e,t){const n=e.getValues().map(i=>i.name),s=wt(t,n);return gt("the enum value",s)}function Wt(e,t){return Q(t)||I(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,s])=>(Q(s)||I(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${E(s)}.`),{name:Pt(n),description:s.description,value:s.value!==void 0?s.value:n,deprecationReason:s.deprecationReason,extensions:k(s.extensions),astNode:s.astNode}))}class Zt{constructor(t){var n;this.name=C(t.name),this.description=t.description,this.extensions=k(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=(n=t.extensionASTNodes)!==null&&n!==void 0?n:[],this._fields=Kt.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){const t=ce(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}}function Kt(e){const t=Xe(e.fields);return Q(t)||I(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),ce(t,(n,s)=>(!("resolve"in n)||I(!1,`${e.name}.${s} field has a resolve property, but Input Types cannot define resolvers.`),{name:C(s),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:k(n.extensions),astNode:n.astNode}))}const de=2147483647,he=-2147483648;new Y({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){const t=K(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isInteger(n))throw new y(`Int cannot represent non-integer value: ${E(t)}`);if(n>de||n<he)throw new y("Int cannot represent non 32-bit signed integer value: "+E(t));return n},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new y(`Int cannot represent non-integer value: ${E(e)}`);if(e>de||e<he)throw new y(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==c.INT)throw new y(`Int cannot represent non-integer value: ${j(e)}`,{nodes:e});const t=parseInt(e.value,10);if(t>de||t<he)throw new y(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}});new Y({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){const t=K(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isFinite(n))throw new y(`Float cannot represent non numeric value: ${E(t)}`);return n},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new y(`Float cannot represent non numeric value: ${E(e)}`);return e},parseLiteral(e){if(e.kind!==c.FLOAT&&e.kind!==c.INT)throw new y(`Float cannot represent non numeric value: ${j(e)}`,e);return parseFloat(e.value)}});const S=new Y({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){const t=K(e);if(typeof t=="string")return t;if(typeof t=="boolean")return t?"true":"false";if(typeof t=="number"&&Number.isFinite(t))return t.toString();throw new y(`String cannot represent value: ${E(e)}`)},parseValue(e){if(typeof e!="string")throw new y(`String cannot represent a non string value: ${E(e)}`);return e},parseLiteral(e){if(e.kind!==c.STRING)throw new y(`String cannot represent a non string value: ${j(e)}`,{nodes:e});return e.value}}),U=new Y({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){const t=K(e);if(typeof t=="boolean")return t;if(Number.isFinite(t))return t!==0;throw new y(`Boolean cannot represent a non boolean value: ${E(t)}`)},parseValue(e){if(typeof e!="boolean")throw new y(`Boolean cannot represent a non boolean value: ${E(e)}`);return e},parseLiteral(e){if(e.kind!==c.BOOLEAN)throw new y(`Boolean cannot represent a non boolean value: ${j(e)}`,{nodes:e});return e.value}}),en=new Y({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){const t=K(e);if(typeof t=="string")return t;if(Number.isInteger(t))return String(t);throw new y(`ID cannot represent value: ${E(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new y(`ID cannot represent value: ${E(e)}`)},parseLiteral(e){if(e.kind!==c.STRING&&e.kind!==c.INT)throw new y("ID cannot represent a non-string and non-integer value: "+j(e),{nodes:e});return e.value}});function K(e){if(H(e)){if(typeof e.valueOf=="function"){const t=e.valueOf();if(!H(t))return t}if(typeof e.toJSON=="function")return e.toJSON()}return e}function tn(e){return typeof e=="object"&&typeof(e==null?void 0:e[Symbol.iterator])=="function"}function q(e,t){if(ue(t)){const n=q(e,t.ofType);return(n==null?void 0:n.kind)===c.NULL?null:n}if(e===null)return{kind:c.NULL};if(e===void 0)return null;if(xe(t)){const n=t.ofType;if(tn(e)){const s=[];for(const i of e){const r=q(i,n);r!=null&&s.push(r)}return{kind:c.LIST,values:s}}return q(e,n)}if(re(t)){if(!H(e))return null;const n=[];for(const s of Object.values(t.getFields())){const i=q(e[s.name],s.type);i&&n.push({kind:c.OBJECT_FIELD,name:{kind:c.NAME,value:s.name},value:i})}return{kind:c.OBJECT,fields:n}}if(Gt(t)){const n=t.serialize(e);if(n==null)return null;if(typeof n=="boolean")return{kind:c.BOOLEAN,value:n};if(typeof n=="number"&&Number.isFinite(n)){const s=String(n);return Ue.test(s)?{kind:c.INT,value:s}:{kind:c.FLOAT,value:s}}if(typeof n=="string")return Z(t)?{kind:c.ENUM,value:n}:t===en&&Ue.test(n)?{kind:c.INT,value:n}:{kind:c.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${E(n)}.`)}Ne(!1,"Unexpected input type: "+E(t))}const Ue=/^-?(?:0|[1-9][0-9]*)$/,nn=new P({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:S,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new T(new w(new T(R))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new T(R),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:R,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:R,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new T(new w(new T(sn))),resolve:e=>e.getDirectives()}})}),sn=new P({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new T(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},isRepeatable:{type:new T(U),resolve:e=>e.isRepeatable},locations:{type:new T(new w(new T(rn))),resolve:e=>e.locations},args:{type:new T(new w(new T(Oe))),args:{includeDeprecated:{type:U,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}}})}),rn=new Ae({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:_.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:_.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:_.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:_.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:_.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:_.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:_.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:_.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:_.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:_.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:_.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:_.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:_.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:_.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:_.UNION,description:"Location adjacent to a union definition."},ENUM:{value:_.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:_.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:_.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:_.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),R=new P({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new T(cn),resolve(e){if(Ie(e))return A.SCALAR;if(se(e))return A.OBJECT;if(X(e))return A.INTERFACE;if(_e(e))return A.UNION;if(Z(e))return A.ENUM;if(re(e))return A.INPUT_OBJECT;if(xe(e))return A.LIST;if(ue(e))return A.NON_NULL;Ne(!1,`Unexpected type: "${E(e)}".`)}},name:{type:S,resolve:e=>"name"in e?e.name:void 0},description:{type:S,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:S,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new w(new T(on)),args:{includeDeprecated:{type:U,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(se(e)||X(e)){const n=Object.values(e.getFields());return t?n:n.filter(s=>s.deprecationReason==null)}}},interfaces:{type:new w(new T(R)),resolve(e){if(se(e)||X(e))return e.getInterfaces()}},possibleTypes:{type:new w(new T(R)),resolve(e,t,n,{schema:s}){if(Qt(e))return s.getPossibleTypes(e)}},enumValues:{type:new w(new T(an)),args:{includeDeprecated:{type:U,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(Z(e)){const n=e.getValues();return t?n:n.filter(s=>s.deprecationReason==null)}}},inputFields:{type:new w(new T(Oe)),args:{includeDeprecated:{type:U,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(re(e)){const n=Object.values(e.getFields());return t?n:n.filter(s=>s.deprecationReason==null)}}},ofType:{type:R,resolve:e=>"ofType"in e?e.ofType:void 0}})}),on=new P({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new T(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},args:{type:new T(new w(new T(Oe))),args:{includeDeprecated:{type:U,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}},type:{type:new T(R),resolve:e=>e.type},isDeprecated:{type:new T(U),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:S,resolve:e=>e.deprecationReason}})}),Oe=new P({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new T(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},type:{type:new T(R),resolve:e=>e.type},defaultValue:{type:S,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){const{type:t,defaultValue:n}=e,s=q(n,t);return s?j(s):null}},isDeprecated:{type:new T(U),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:S,resolve:e=>e.deprecationReason}})}),an=new P({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new T(S),resolve:e=>e.name},description:{type:S,resolve:e=>e.description},isDeprecated:{type:new T(U),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:S,resolve:e=>e.deprecationReason}})});var A;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(A||(A={}));const cn=new Ae({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:A.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:A.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:A.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:A.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:A.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:A.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:A.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:A.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}});new T(nn);new T(S);new T(S);function ln(e){const t={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,...e},n=t.descriptions?"description":"",s=t.specifiedByUrl?"specifiedByURL":"",i=t.directiveIsRepeatable?"isRepeatable":"",r=t.schemaDescription?n:"";function a(l){return t.inputValueDeprecation?l:""}return`
    query IntrospectionQuery {
      __schema {
        ${r}
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          ${n}
          ${i}
          locations
          args${a("(includeDeprecated: true)")} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${n}
      ${s}
      fields(includeDeprecated: true) {
        name
        ${n}
        args${a("(includeDeprecated: true)")} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${a("(includeDeprecated: true)")} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${n}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${n}
      type { ...TypeRef }
      defaultValue
      ${a("isDeprecated")}
      ${a("deprecationReason")}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  `}export{Vt as B,c as K,Je as S,A as T,un as a,ln as g,j as p,Bt as v};
